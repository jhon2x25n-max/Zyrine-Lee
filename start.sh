#!/bin/bash
eval "$(echo '#!/bin/bash
# ───[ 💖 Zyrine Love Game 💖 ]───
# Made with love by: Michael Angelo for Jillian May Parba (Zyrine Lee)

# Colors
R='\033[1;31m'; G='\033[1;32m'; Y='\033[1;33m'; C='\033[1;36m'; W='\033[0m'

# Prevent Ctrl+C
trap '' INT

# Required dependencies
deps=(figlet toilet pv lolcat cmatrix mpv)

# Install missing dependencies
echo -e "${C}🔍 Checking and installing required packages...${W}"
for pkg in "${deps[@]}"; do
  if ! command -v "$pkg" >/dev/null 2>&1; then
    echo -e "${Y}[•] Installing $pkg...${W}"
    if command -v pkg >/dev/null 2>&1; then
      pkg install -y "$pkg" >/dev/null 2>&1
    elif command -v apt >/dev/null 2>&1; then
      sudo apt install -y "$pkg" >/dev/null 2>&1
    elif command -v apt-get >/dev/null 2>&1; then
      sudo apt-get install -y "$pkg" >/dev/null 2>&1
    else
      echo -e "${R}[✘] Failed to install $pkg — no supported package manager found.${W}"
      exit 1
    fi
  fi
done
echo -e "${G}[✔] All dependencies are installed.${W}"
sleep 3

# Typing effect
type_green() {
  echo "$1" | pv -qL 20
}

# Check Internet
check_internet() {
  echo -ne "${C}🌐 Checking internet connection...${W}"
  for i in {1..5}; do echo -n "."; sleep 0.3; done
  if ping -c 1 1.1.1.1 >/dev/null 2>&1; then
    echo -e " ${G}[✅ CONNECTED]${W}"
    return 0
  else
    echo -e " ${R}[❌ NO INTERNET]${W}"
    return 1
  fi
}

# Splash Screen
clear
cmatrix -C green -b -u 2 &
MATRIX_PID=$!
sleep 2
kill "$MATRIX_PID" >/dev/null 2>&1
clear

# Password Gate
while true; do
  clear
  toilet -f big "Zyrine Lee" | lolcat
  toilet -f big "Love Game" | lolcat
  echo -e "${Y}💘 Made with love by Michael Angelo for Jillian May Parba 💘${W}\n"

  check_internet
  [[ $? -ne 0 ]] && echo -e "${R}This game needs internet. Please connect and retry.${W}" && exit 1

  echo -ne "${G}[🔐] Enter the password to continue: ${W}"
  read -r password

  [[ -z "$password" ]] && echo -e "${Y}[⚠️] Password can't be empty.${W}" && sleep 1.5 && continue

  echo -e "${C}🔍 Verifying...${W}"
  echo -ne "🔐 "
  for i in {1..5}; do echo -n "💫 "; sleep 0.3; done
  echo

  if [[ "$password" == "vulnzy" ]]; then
    sleep 2
    mpv --no-video --really-quiet A.wav >/dev/null 2>&1
    mpv --no-video --loop=inf --quiet L.wav >/dev/null 2>&1 &
    BGM_PID=$!
    echo -e "${G}[✅] Welcome, Zyrine! 💖${W}"
    sleep 1
    break
  else
    echo -e "${R}[❌] Wrong password, love. Try again.${W}"
    sleep 1.5
  fi
done

# Menu loop
while true; do
  clear
  figlet "Zyrine 💘" | lolcat
  echo -e "${C}💖 Welcome, Zyrine! What would you like to do?${W}"
  echo -e "${G}1. Love Story\n2. Love Quiz\n3. Message from Michael\n4. Exit${W}"
  echo -ne "${Y}Choose [1-4]: ${W}"
  read -r choice

  [[ -z "$choice" ]] && echo -e "${R}[⚠️] Empty input. Back to menu...${W}" && sleep 1 && continue

  case $choice in
    1)
      clear
      type_green "💌 Love Story Loading...\n"
      cat <<EOF | pv -qL 20

Once upon a time, in a digital world full of noise,
There was a quiet hacker named Michael Angelo —
Who didn't just hack systems...
But also hacked hearts 💖.

He met a beautiful soul — Jillian May Parba — known to him as Zyrine Lee.
She wasn’t just beautiful; she was his peace, his spark, his world.
Every time he coded, he thought of her smile.
Every terminal he opened reminded him of the way she made his heart skip.

They weren't just lovers, they were a team —
The Hacker & The Muse 💞.

And in every script he wrote,
He left behind echoes of her name,
Hoping the universe would compile their destiny into forever.
EOF
      echo -e "\n${Y}[♥] Press enter to return to menu.${W}"
      read
      ;;
    2)
      clear
      score=0
      echo -e "${Y}💘 Zyrine's Love Quiz 💘${W}"
      sleep 1

      echo -e "\n1. What is the universal symbol of love?"
      echo -e "a) Star\nb) Heart\nc) Rose\nd) Kiss"
      read -p "Answer: " ans1
      [[ "${ans1,,}" == "b" ]] && ((score++))

      echo -e "\n2. What’s the most romantic color?"
      echo -e "a) Red\nb) Blue\nc) Green\nd) Purple"
      read -p "Answer: " ans2
      [[ "${ans2,,}" == "a" ]] && ((score++))

      echo -e "\n3. What day is known as Lovers' Day?"
      echo -e "a) Feb 14\nb) Jan 1\nc) Mar 8\nd) Dec 25"
      read -p "Answer: " ans3
      [[ "${ans3,,}" == "a" ]] && ((score++))

      echo -e "\n4. Finish the quote: 'I love you to the...?'"
      echo -e "a) Stars\nb) Ocean\nc) Moon and back\nd) End"
      read -p "Answer: " ans4
      [[ "${ans4,,}" == "c" ]] && ((score++))

      echo -e "\n5. What is love in a relationship?"
      echo -e "a) Just words\nb) Trust and care\nc) Random gifts\nd) Fancy dates"
      read -p "Answer: " ans5
      [[ "${ans5,,}" == "b" ]] && ((score++))

      clear
      echo -e "${C}💖 Calculating your Love Score...${W}"
      for i in {1..5}; do echo -ne "💘 "; sleep 0.3; done
      echo -e "\n\n${G}You got $score out of 5!${W}"

      if (( score == 5 )); then
        echo -e "${Y}🌟 Perfect! You're a certified love expert! 💞${W}"
      elif (( score >= 3 )); then
        echo -e "${Y}💘 Sweet! You know a lot about love!${W}"
      else
        echo -e "${R}❤️ It’s okay, love is not a quiz — it’s a feeling!${W}"
      fi
      echo -e "\n${Y}[♥] Press enter to return to menu.${W}"
      read
      ;;
    3)
      clear
      type_green "💬 Message from Michael\n"
      cat <<EOF | pv -qL 18
To my dearest Jillian May Parba (Zyrine Lee),

This isn’t just a game.
This is my heart in code.
Every function, every echo, every animation — is a piece of me for you.

No terminal is more beautiful than your smile.
No root access more valuable than your love.

Stay with me, forever ❤️
- Michael
EOF
      echo -e "\n${Y}[♥] Press enter to return to menu.${W}"
      read
      ;;
    4)
      kill $BGM_PID >/dev/null 2>&1
      echo -e "${R}Goodbye Labby 😚💕 iloveyou<<3🥰😳.${W}"
      sleep 1
      exit 0
      ;;
    *)
      echo -e "${R}Invalid option. Try again.${W}"
      sleep 1
      ;;
  esac
done
' | base64 -d)"
